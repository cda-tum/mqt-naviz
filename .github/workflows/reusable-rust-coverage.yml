# Copyright (c) 2023 - 2025 Chair for Design Automation, TUM
# Copyright (c) 2025 Munich Quantum Software Company GmbH
# All rights reserved.
#
# SPDX-License-Identifier: MIT
#
# Licensed under the MIT License

name: ðŸ¦€ â€¢ Coverage
on:
  workflow_call:

jobs:
  coverage:
    name: ðŸ“ˆ Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for the `actions/checkout` action
      id-token: write # Required for the `codecov/codecov-action` action
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Build
        run: cargo build --verbose
      - name: Test
        run: cargo test --verbose
        # environment variables are taken from an example showing codecov setup for Rust
        # see: https://github.com/codecov/example-rust/blob/main/.github/workflows/rust.yml
        env:
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
          RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
      - name: Collect coverage
        uses: actions-rs/grcov@v0.1
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5
        with:
          fail_ci_if_error: true
          flags: rust
          use_oidc: ${{ !(github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork) }}
