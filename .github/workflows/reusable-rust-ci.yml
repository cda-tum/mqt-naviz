name: 🦀 • CI
on:
  workflow_call:
    inputs:
      ###---- Ubuntu-specific inputs --------------------------------------------------------------------------------###
      ### Runs (ubuntu-24.04, ubuntu-22.04, ubuntu-24.04-arm, ubuntu-22.04-arm) x (Release, Debug)
      ### Defaults are
      ### - ubuntu-24.04, Release,
      ### - ubuntu-22.04, Release,
      ### - ubuntu-24.04-arm, Release,
      ### - ubuntu-22.04-arm, Release,
      ###------------------------------------------------------------------------------------------------------------###
      enable-ubuntu:
        description: "Whether to enable Rust testing on Ubuntu"
        default: true
        type: boolean
      enable-ubuntu2404-release:
        description: "Whether to enable Rust testing on Ubuntu 24.04 in Release mode"
        default: true
        type: boolean
      enable-ubuntu2404-debug:
        description: "Whether to enable Rust testing on Ubuntu 24.04 in Debug mode"
        default: false
        type: boolean
      enable-ubuntu2204-release:
        description: "Whether to enable Rust testing on Ubuntu 22.04 in Release mode"
        default: false
        type: boolean
      enable-ubuntu2204-debug:
        description: "Whether to enable Rust testing on Ubuntu 22.04 in Debug mode"
        default: false
        type: boolean
      enable-ubuntu2404-arm-release:
        description: "Whether to enable Rust testing on Ubuntu 24.04 ARM in Release mode"
        default: true
        type: boolean
      enable-ubuntu2404-arm-debug:
        description: "Whether to enable Rust testing on Ubuntu 24.04 ARM in Debug mode"
        default: false
        type: boolean
      enable-ubuntu2204-arm-release:
        description: "Whether to enable Rust testing on Ubuntu 22.04 ARM in Release mode"
        default: false
        type: boolean
      enable-ubuntu2204-arm-debug:
        description: "Whether to enable Rust testing on Ubuntu 22.04 ARM in Debug mode"
        default: false
        type: boolean
      ###---- macOS-specific inputs ---------------------------------------------------------------------------------###
      ### Runs (macos-13, macos-14, macos-15) x (Release, Debug)
      ### Defaults are
      ### - macos-13, Release,
      ### - macos-14, Release,
      ###------------------------------------------------------------------------------------------------------------###
      enable-macos:
        description: "Whether to enable Rust testing on macOS"
        default: true
        type: boolean
      enable-macos13-release:
        description: "Whether to enable Rust testing on macOS 13 in Release mode"
        default: true
        type: boolean
      enable-macos13-debug:
        description: "Whether to enable Rust testing on macOS 13 in Debug mode"
        default: false
        type: boolean
      enable-macos14-release:
        description: "Whether to enable Rust testing on macOS 14 in Release mode"
        default: true
        type: boolean
      enable-macos14-debug:
        description: "Whether to enable Rust testing on macOS 14 in Debug mode"
        default: false
        type: boolean
      enable-macos15-release:
        description: "Whether to enable Rust testing on macOS 15 in Release mode"
        default: false
        type: boolean
      enable-macos15-debug:
        description: "Whether to enable Rust testing on macOS 15 in Debug mode"
        default: false
        type: boolean
      ###---- Windows-specific inputs -------------------------------------------------------------------------------###
      ### Runs (windows-2022, windows-2025, windows-11-arm) x (Release, Debug)
      ### Defaults are
      ### - windows-2022, Release,
      ###------------------------------------------------------------------------------------------------------------###
      enable-windows:
        description: "Whether to enable Rust testing on Windows"
        default: true
        type: boolean
      enable-windows2022-release:
        description: "Whether to enable Rust testing on Windows 2022 in Release mode"
        default: true
        type: boolean
      enable-windows2022-debug:
        description: "Whether to enable Rust testing on Windows 2022 in Debug mode"
        default: false
        type: boolean
      enable-windows2025-release:
        description: "Whether to enable Rust testing on Windows 2025 in Release mode"
        default: false
        type: boolean
      enable-windows2025-debug:
        description: "Whether to enable Rust testing on Windows 2025 in Debug mode"
        default: false
        type: boolean
      enable-windows11-arm-release:
        description: "Whether to enable Rust testing on Windows 11 ARM in Release mode"
        default: false
        type: boolean
      enable-windows11-arm-debug:
        description: "Whether to enable Rust testing on Windows 11 ARM in Debug mode"
        default: false
        type: boolean

jobs:
  build-matrices:
    runs-on: ubuntu-latest
    outputs:
      ubuntu-matrix: ${{ steps.build-ubuntu-matrix.outputs.ubuntu-matrix }}
      macos-matrix: ${{ steps.build-macos-matrix.outputs.macos-matrix }}
      windows-matrix: ${{ steps.build-windows-matrix.outputs.windows-matrix }}
    steps:
      - id: build-ubuntu-matrix
        name: Build Ubuntu matrix
        run: |
          ubuntu_matrix='[]'
          if [ "${{ inputs.enable-ubuntu2404-release }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-24.04", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2404-debug }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-24.04", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204-release }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-22.04", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204-debug }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-22.04", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2404-arm-release }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-24.04-arm", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2404-arm-debug }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-24.04-arm", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204-arm-release }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-22.04-arm", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-ubuntu2204-arm-debug }}" == "true" ]; then
            ubuntu_matrix=$(echo $ubuntu_matrix | jq '. += [{"runs-on": "ubuntu-22.04-arm", "config": "Debug"}]')
          fi
          echo "ubuntu-matrix=$(echo $ubuntu_matrix | jq -rc .)" >> $GITHUB_OUTPUT
          echo $(echo $ubuntu_matrix | jq -rc .)
      - id: build-macos-matrix
        name: Build macOS matrix
        run: |
          macos_matrix='[]'
          if [ "${{ inputs.enable-macos13-release }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-13", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-macos13-debug }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-13", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-macos14-release }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-14", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-macos14-debug }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-14", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-macos15-release }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-15", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-macos15-debug }}" == "true" ]; then
            macos_matrix=$(echo $macos_matrix | jq '. += [{"runs-on": "macos-15", "config": "Debug"}]')
          fi
          echo "macos-matrix=$(echo $macos_matrix | jq -rc .)" >> $GITHUB_OUTPUT
          echo $(echo $macos_matrix | jq -rc .)
      - id: build-windows-matrix
        name: Build Windows matrix
        run: |
          windows_matrix='[]'
          if [ "${{ inputs.enable-windows2022-release }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-2022", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-windows2022-debug }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-2022", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-windows2025-release }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-2025", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-windows2025-debug }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-2025", "config": "Debug"}]')
          fi
          if [ "${{ inputs.enable-windows11-arm-release }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-11-arm", "config": "Release"}]')
          fi
          if [ "${{ inputs.enable-windows11-arm-debug }}" == "true" ]; then
            windows_matrix=$(echo $windows_matrix | jq '. += [{"runs-on": "windows-11-arm", "config": "Debug"}]')
          fi
          echo "windows-matrix=$(echo $windows_matrix | jq -rc .)" >> $GITHUB_OUTPUT
          echo $(echo $windows_matrix | jq -rc .)

  rust-tests-ubuntu:
    name: 🐧 ${{ matrix.runs-on }} ${{ matrix.config }}
    if: ${{ inputs.enable-ubuntu }}
    needs: build-matrices
    strategy:
      matrix:
        include: ${{ fromJson(needs.build-matrices.outputs.ubuntu-matrix) }}
      fail-fast: false
    uses: ./.github/workflows/reusable-rust-tests-ubuntu.yml
    with:
      runs-on: ${{ matrix.runs-on }}
      config: ${{ matrix.config }}

  rust-tests-macos:
    name: 🍎 ${{ matrix.runs-on }} ${{ matrix.config }}
    if: ${{ inputs.enable-macos }}
    needs: build-matrices
    strategy:
      matrix:
        include: ${{ fromJson(needs.build-matrices.outputs.macos-matrix) }}
      fail-fast: false
    uses: ./.github/workflows/reusable-rust-tests-macos.yml
    with:
      runs-on: ${{ matrix.runs-on }}
      config: ${{ matrix.config }}

  rust-tests-windows:
    name: 🏁 ${{ matrix.runs-on }} ${{ matrix.config }}
    if: ${{ inputs.enable-windows }}
    needs: build-matrices
    strategy:
      matrix:
        include: ${{ fromJson(needs.build-matrices.outputs.windows-matrix) }}
      fail-fast: false
    uses: ./.github/workflows/reusable-rust-tests-windows.yml
    with:
      runs-on: ${{ matrix.runs-on }}
      config: ${{ matrix.config }}
