name: CD üöÄ
on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  attestations: write
  contents: read
  id-token: write

jobs:
  docker-packaging:
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/naviz-web
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set metadata (tag, label) for docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDKIT_CONTEXT_KEEP_GIT_DIR=true

  # Builds the sdist and wheels on all supported platforms and uploads the resulting
  # wheels as GitHub artifacts `dev-cibw-*` or `cibw-*`, depending on whether the
  # workflow is triggered from a PR or a release, respectively.
  python-packaging:
    name: üêç Packaging
    uses: munich-quantum-toolkit/workflows/.github/workflows/reusable-python-packaging.yml@v1.11
    with:
      # Runs to enable
      enable-ubuntu2404: true
      enable-ubuntu2404-arm: true
      enable-macos13: true
      enable-macos14: true
      enable-windows2022: true
      enable-windows11-arm: true
      # Runs to disable
      enable-ubuntu2204: false
      enable-ubuntu2204-arm: false
      enable-macos15: false
      enable-windows2025: false

  # Downloads the previously generated artifacts and deploys to PyPI on published releases.
  deploy:
    if: github.event_name == 'release' && github.event.action == 'published'
    name: üöÄ Deploy to PyPI
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/mqt.core
    needs: [python-packaging]
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Generate artifact attestation for sdist and wheel(s)
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: "dist/*"
      - uses: pypa/gh-action-pypi-publish@release/v1
